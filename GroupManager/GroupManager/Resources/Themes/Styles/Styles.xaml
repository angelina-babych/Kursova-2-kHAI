<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--ANIMATIONS-->
    <Storyboard x:Key="SlideDown">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                             From="0" To="30"
                             Duration="0:0:0.2" />
    </Storyboard>

    <Storyboard x:Key="SlideUp">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                              From="30" To="0" 
                              Duration="0:0:0.2" />
    </Storyboard>


    <Storyboard x:Key="SlideDown1">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                             From="0" To="170"
                             Duration="0:0:0.2" />
    </Storyboard>

    <Storyboard x:Key="SlideUp1">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                              From="170" To="0" 
                              Duration="0:0:0.2" />
    </Storyboard>



    <Storyboard x:Key="SlideDown2">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                             From="0" To="120"
                             Duration="0:0:0.2" />
    </Storyboard>

    <Storyboard x:Key="SlideUp2">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                              From="120" To="0" 
                              Duration="0:0:0.2" />
    </Storyboard>
    <!--END ANIMATIONS-->
    
    <!--CALENDAR-->
    
    
    
    
    <!--CALENDAR-->
    
    
    
    
    <Style x:Key="Header1">
        <Setter Property="TextElement.FontFamily" Value="Nunito"></Setter>
        <Setter Property="TextElement.FontSize" Value="30"></Setter>
        <Setter Property="TextElement.Foreground" Value="#F5F5F5"></Setter>
    </Style>

    <Style x:Key="GroupsListView" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="25"></Setter>
    </Style>


    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="CanUserDeleteRows" Value="False"></Setter>
        <Setter Property="CanUserResizeRows" Value="False"></Setter>
        <Setter Property="CanUserSortColumns" Value="False"></Setter>
        <Setter Property="CanUserResizeColumns" Value="False"></Setter>
        
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
        <Setter Property="FontSize" Value="25"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="CanUserDeleteRows" Value="False"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
      
        <Setter Property="HeadersVisibility" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="CanUserReorderColumns" Value="False"></Setter>

       
       
     
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Margin" Value="0,15,0,0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="DefaultTextBox">
        <Border CornerRadius="3" BorderThickness="1" Background="White">
            <Border.BorderBrush>
                <SolidColorBrush Color="DarkGray" Opacity="0.22"></SolidColorBrush>
            </Border.BorderBrush>
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="80"></Setter>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="30"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="DefaultTextBox2">
        <Border CornerRadius="3" Background="Transparent" BorderBrush="#7284FF" BorderThickness="0,0,0,2">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="80"></Setter>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="30"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>








    <Style x:Key="AnimatedTextBox" TargetType="TextBox">
        <Setter Property="TextBox.FontSize" Value="19"></Setter>
        <Setter Property="TextBox.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBox.FontFamily" Value="PT Sans"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=AddGroupToggleButton}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideDown}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideUp}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="ButtonBase" x:Key="OpenContextMenuStyle">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    
    
    <ControlTemplate TargetType="ButtonBase" x:Key="TransparentButton">
        <Border Background="Transparent" BorderBrush="Transparent" Cursor="Hand"
                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
        </Border>
    </ControlTemplate>
    
    
    
    

    <Style x:Key="PlaceholderText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
    </Style>

    <Style x:Key="ListViewItemFocusableTransparent" TargetType="ListViewItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Yellow"></SolidColorBrush>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"></SolidColorBrush>
        </Style.Resources>
    </Style>

    <Style x:Key="BoldLabel" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="/Fonts/#PT Sans"></Setter>
    </Style>
    <Style x:Key="TransparentTextBox" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="{Binding ReadOnlyTextBoxes}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
        <Setter Property="BorderBrush" Value="Black" ></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontFamily" Value="/Fonts/#PT Sans"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="Margin" Value="5,0,0,0"></Setter>
    </Style>
    <Style x:Key="TransparentRichTextBox" TargetType="RichTextBox">
        <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
        <Setter Property="BorderBrush" Value="Black" ></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontFamily" Value="/Fonts/#PT Sans"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="Auto"></Setter>
    </Style>



    <Style x:Key="AnimatedParentsForm" TargetType="StackPanel">
        <Setter Property="TextBox.FontSize" Value="19"></Setter>
        <Setter Property="TextBox.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBox.FontFamily" Value="PT Sans"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=AddStudentParents}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideDown1}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideUp1}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

        </Style.Triggers>
    </Style>



    <Style x:Key="AnimatedPrivelegesForm" TargetType="StackPanel">
        <Setter Property="TextBox.FontSize" Value="19"></Setter>
        <Setter Property="TextBox.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBox.FontFamily" Value="PT Sans"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=AddPrivelegesButton}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideDown2}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideUp2}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

        </Style.Triggers>
    </Style>








    <Style TargetType="{x:Type RadioButton}" x:Key="CustomRadio">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="White" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16">
                                <!--Define size of the Bullet-->
                                <!--The two borders-->
                                <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#FFADADAD" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--Text element-->
                        <TextBlock Margin="3,1,0,0" Foreground="#FF3E3E3E" FontFamily="Calibri" FontSize="12">
                        <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
     <ControlTemplate x:Key="CustomChkBox" TargetType="CheckBox">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="90*" />
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="checkButton" Grid.Column="0" Stroke="{TemplateBinding Property=BorderBrush}"></Ellipse>
                <TextBlock x:Name="txtContent" Grid.Column="1" FontWeight="Bold" Foreground="{TemplateBinding Property=Foreground}" VerticalAlignment="Center" FontSize="14" HorizontalAlignment="Center" TextAlignment="Center">
                    <ContentPresenter />
                </TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="checkButton" Property="Stroke" Value="Blue"/>
                    <Setter TargetName="checkButton" Property="Fill" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>




    <ControlTemplate x:Key="DefaultTab" TargetType="TabItem">
        <Border
            x:Name="border"
            BorderThickness="0"
            Background="Transparent"
           >
            <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
        </Border>
    </ControlTemplate>


</ResourceDictionary>